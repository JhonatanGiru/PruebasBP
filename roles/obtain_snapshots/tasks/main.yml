- name: Obtener informacion de maquina virtual en VMWare
  community.vmware.vmware_vm_info:
    hostname: '{{ lookup("ansible.builtin.env", "VMWARE_HOST") }}'
    username: '{{ lookup("ansible.builtin.env", "VMWARE_USER") }}'
    password: '{{ lookup("ansible.builtin.env", "VMWARE_PASSWORD") }}'
    vm_name: "{{ nombre_server }}"
    validate_certs: false
  delegate_to: localhost
  register: obtain_snapshots_vm_info
  changed_when: false

- name: Obtener información de snapshots
  community.vmware.vmware_guest_snapshot_info:
    hostname: '{{ lookup("env", "VMWARE_HOST") }}'
    username: '{{ lookup("env", "VMWARE_USER") }}'
    password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
    datacenter: "{{ obtain_snapshots_vm_info['virtual_machines'][0]['datacenter'] }}"
    name: "{{ nombre_server }}"
    folder: "{{ obtain_snapshots_vm_info['virtual_machines'][0]['folder'] }}"
  delegate_to: localhost
  register: obtain_snapshots_info
  changed_when: false

- name: Crear información de snapshots
  ansible.builtin.set_fact:
    obtain_snapshots_parsed: "{{ obtain_snapshots_parsed | deafult([]) +
      [[] | combine({'nombre': item['name'], 'id': item['id']})] }}"
  loop: "{{ obtain_snapshots_info['guest_snapshots']['snapshots'] }}"
  loop_control:
    label: "Información de snapshot {{ item['name'] }}"
  delegate_to: localhost

- name: Imprimiendo snapshots disponibles
  ansible.builtin.debug:
    var: obtain_snapshots_parsed
  delegate_to: localhost
...
